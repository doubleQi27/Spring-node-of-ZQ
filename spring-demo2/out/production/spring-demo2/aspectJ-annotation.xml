<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--通过 XML 配置启用 AspectJ 注解。非全注解启用 AspectJ 注解模式
    在启用了 @AspectJ 注解支持的情况下，Spring 会自动将 IoC 容器（ApplicationContext）中的所有使用了
    @Aspect 注解的 Bean 识别为一个切面。-->
    <!-- 开启注解扫描 -->
    <context:component-scan base-package="net.biancheng.c"></context:component-scan>
    <!--开启AspectJ 自动代理-->
    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>
    <!--使用 XML 配置 AspectJ 注解的情况下，需手动配置切面的 Bean，
    之后在该 Bean 上添加 @Aspect 注解， Spring 容器自动将其识别为切面-->
    <bean id = "myAspect" class = "net.biancheng.c.aop.aspectJ.annotation.MyAspect">
        <!--依赖/属性注入-->
    </bean>

</beans>